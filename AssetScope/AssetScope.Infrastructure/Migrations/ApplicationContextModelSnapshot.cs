// <auto-generated />
using System;
using AssetScope.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetScope.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetScope.Domain.AgencyRole", b =>
                {
                    b.Property<int>("AgencyUserId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("AgencyUserId", "Role");

                    b.ToTable("AgencyRole");

                    b.HasData(
                        new
                        {
                            AgencyUserId = 1,
                            Role = 63
                        },
                        new
                        {
                            AgencyUserId = 2,
                            Role = 3
                        },
                        new
                        {
                            AgencyUserId = 3,
                            Role = 9
                        },
                        new
                        {
                            AgencyUserId = 4,
                            Role = 3
                        },
                        new
                        {
                            AgencyUserId = 5,
                            Role = 3
                        },
                        new
                        {
                            AgencyUserId = 6,
                            Role = 3
                        },
                        new
                        {
                            AgencyUserId = 7,
                            Role = 17
                        },
                        new
                        {
                            AgencyUserId = 8,
                            Role = 17
                        },
                        new
                        {
                            AgencyUserId = 9,
                            Role = 17
                        },
                        new
                        {
                            AgencyUserId = 10,
                            Role = 31
                        },
                        new
                        {
                            AgencyUserId = 11,
                            Role = 7
                        },
                        new
                        {
                            AgencyUserId = 12,
                            Role = 1
                        },
                        new
                        {
                            AgencyUserId = 13,
                            Role = 1
                        },
                        new
                        {
                            AgencyUserId = 14,
                            Role = 1
                        },
                        new
                        {
                            AgencyUserId = 15,
                            Role = 1
                        },
                        new
                        {
                            AgencyUserId = 16,
                            Role = 1
                        },
                        new
                        {
                            AgencyUserId = 17,
                            Role = 1
                        },
                        new
                        {
                            AgencyUserId = 18,
                            Role = 1
                        },
                        new
                        {
                            AgencyUserId = 19,
                            Role = 1
                        },
                        new
                        {
                            AgencyUserId = 20,
                            Role = 1
                        });
                });

            modelBuilder.Entity("AssetScope.Domain.AgencyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DOEOnly")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCFO")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Manual")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SnapshotId")
                        .HasColumnType("int");

                    b.Property<string>("StaffType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateOrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgencyUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user1@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Super Admin",
                            StaffType = "Teacher",
                            StateOrganizationId = "Org_8",
                            UserId = "User_1"
                        },
                        new
                        {
                            Id = 2,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user2@example.com",
                            EndDate = new DateTime(2023, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCFO = true,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Finance Team Approver",
                            StaffType = "IT",
                            StateOrganizationId = "Org_1",
                            UserId = "User_2"
                        },
                        new
                        {
                            Id = 3,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user3@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Section Chief User",
                            StaffType = "IT",
                            StateOrganizationId = "Org_1",
                            UserId = "User_3"
                        },
                        new
                        {
                            Id = 4,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = false,
                            Email = "user4@example.com",
                            EndDate = new DateTime(2023, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Finance Team Member 1",
                            StaffType = "IT",
                            StateOrganizationId = "Org_1",
                            UserId = "User_4"
                        },
                        new
                        {
                            Id = 5,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user5@example.com",
                            EndDate = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Finance Team Member 2",
                            StaffType = "Support",
                            StateOrganizationId = "Org_8",
                            UserId = "User_5"
                        },
                        new
                        {
                            Id = 6,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = false,
                            Email = "user6@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Finance Team Member 3",
                            StaffType = "Support",
                            StateOrganizationId = "Org_4",
                            UserId = "User_6"
                        },
                        new
                        {
                            Id = 7,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = false,
                            Email = "user7@example.com",
                            EndDate = new DateTime(2023, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Controller Fund 1",
                            StaffType = "Teacher",
                            StateOrganizationId = "Org_7",
                            UserId = "User_7"
                        },
                        new
                        {
                            Id = 8,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = false,
                            Email = "user8@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Controller Fund 2",
                            StaffType = "IT",
                            StateOrganizationId = "Org_7",
                            UserId = "User_8"
                        },
                        new
                        {
                            Id = 9,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user9@example.com",
                            EndDate = new DateTime(2023, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Controller Fund 3",
                            StaffType = "Support",
                            StateOrganizationId = "Org_4",
                            UserId = "User_9"
                        },
                        new
                        {
                            Id = 10,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user10@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin User",
                            StaffType = "IT",
                            StateOrganizationId = "Org_2",
                            UserId = "User_10"
                        },
                        new
                        {
                            Id = 11,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = false,
                            Email = "contract_approver_1@test.com",
                            EndDate = new DateTime(2023, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Contract Approver",
                            StaffType = "Admin",
                            StateOrganizationId = "Org_5",
                            UserId = "User_11"
                        },
                        new
                        {
                            Id = 12,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user12@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Entry User 1",
                            StaffType = "Admin",
                            StateOrganizationId = "Org_10",
                            UserId = "User_12"
                        },
                        new
                        {
                            Id = 13,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = false,
                            Email = "user13@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Entry User 2",
                            StaffType = "Admin",
                            StateOrganizationId = "Org_9",
                            UserId = "User_13"
                        },
                        new
                        {
                            Id = 14,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = false,
                            Email = "user14@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "David",
                            StaffType = "Admin",
                            StateOrganizationId = "Org_5",
                            UserId = "User_14"
                        },
                        new
                        {
                            Id = 15,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = false,
                            Email = "user15@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tony",
                            StaffType = "Admin",
                            StateOrganizationId = "Org_1",
                            UserId = "User_15"
                        },
                        new
                        {
                            Id = 16,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user16@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Garrett",
                            StaffType = "Teacher",
                            StateOrganizationId = "Org_2",
                            UserId = "User_16"
                        },
                        new
                        {
                            Id = 17,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user17@example.com",
                            EndDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Andrea",
                            StaffType = "Admin",
                            StateOrganizationId = "Org_7",
                            UserId = "User_17"
                        },
                        new
                        {
                            Id = 18,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user18@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Venkat",
                            StaffType = "Teacher",
                            StateOrganizationId = "Org_7",
                            UserId = "User_18"
                        },
                        new
                        {
                            Id = 19,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = false,
                            Email = "user19@example.com",
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = true,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amrutha",
                            StaffType = "Admin",
                            StateOrganizationId = "Org_2",
                            UserId = "User_19"
                        },
                        new
                        {
                            Id = 20,
                            AppVersion = "1.0",
                            BeginDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DOEOnly = true,
                            Email = "user20@example.com",
                            EndDate = new DateTime(2023, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsCFO = false,
                            IsDeleted = false,
                            Manual = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rod",
                            StaffType = "IT",
                            StateOrganizationId = "Org_9",
                            UserId = "User_20"
                        });
                });

            modelBuilder.Entity("AssetScope.Domain.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssetTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DepreciationSchedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WarrantyEndDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("StatusId");

                    b.HasIndex("VendorId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("AssetScope.Domain.AssetCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AssetCategory");
                });

            modelBuilder.Entity("AssetScope.Domain.AssetStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AssetStatus");
                });

            modelBuilder.Entity("AssetScope.Domain.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("AssetScope.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("AssetScope.Domain.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("AssetScope.Domain.AgencyRole", b =>
                {
                    b.HasOne("AssetScope.Domain.AgencyUser", "AgencyUser")
                        .WithMany("Roles")
                        .HasForeignKey("AgencyUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AgencyUser");
                });

            modelBuilder.Entity("AssetScope.Domain.Asset", b =>
                {
                    b.HasOne("AssetScope.Domain.Employee", "AssignedTo")
                        .WithMany("AssignedAssets")
                        .HasForeignKey("AssignedToId");

                    b.HasOne("AssetScope.Domain.AssetCategory", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetScope.Domain.Location", "Location")
                        .WithMany("Assets")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetScope.Domain.AssetStatus", "Status")
                        .WithMany("Assets")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetScope.Domain.Vendor", "Vendor")
                        .WithMany("Assets")
                        .HasForeignKey("VendorId");

                    b.Navigation("AssignedTo");

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("Status");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("AssetScope.Domain.AgencyUser", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("AssetScope.Domain.AssetCategory", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetScope.Domain.AssetStatus", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetScope.Domain.Employee", b =>
                {
                    b.Navigation("AssignedAssets");
                });

            modelBuilder.Entity("AssetScope.Domain.Location", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("AssetScope.Domain.Vendor", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
